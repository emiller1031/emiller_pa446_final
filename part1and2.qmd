---
title: "Parts I & II"
author: "Elizabeth Miller"
format: pdf
editor: visual
---

```{r}
#| warning: false
#| echo: false
library(tidyverse)
library(usethis)
library(rvest)
library(gt)
library(tidytext)
library(readr)
library(tokenizers)
```

## Part I: Web Scraping

Go to the website <https://www.scrapethissite.com/pages/simple/> and scrape the data to create
a table with four variables: Country, Capital, Population, and Area. The table will have a total of
250 observations.

```{r}
url <- "https://www.scrapethissite.com/pages/simple/"
html <- read_html(url)

country <- html |>
  html_elements("h3.country-name") |> 
  html_text2() 

capital <- html |>
  html_elements("span.country-capital") |> 
  html_text2() 

population <- html %>%
  html_elements("span.country-population") %>%
  html_text2()

area <- html |>
  html_elements("span.country-area") |> 
  html_text2() 

# Build tibble
country_table <- tibble(country, capital, population, area)
country_table
```

## Part II: Text Analysis

Use the artofwar dataset and conduct a text analysis.

Tokenize the data, compute word counts, remove stop words, and create bar plot showing dataset's top ten used words, flipping the axes.

```{r}
# Tokenize the data
text_data <- read_csv("artofwar.csv")

text_data <- text_data %>%
  rename("origcol" = x) # the column name was giving me trouble, so i renamed it

tokens <- text_data %>%
  unnest_tokens(word, origcol)

# Compute word counts
tokens %>%
  count(word)

# Remove stop words
tokens %>%
  anti_join(stop_words)

# create bar plot showing dataset's top 10 used words
tokens %>%
  anti_join(stop_words) %>%
  count(word) %>%
  arrange(desc(n)) %>%
  slice(1:10) %>%
  ggplot(aes(x = word, y = n)) +
  geom_col() +
  # Flip the plot coordinates
  coord_flip()
```

Let's make the visualization better by creating custom stop words to remove all numbers. Compute word counts again and create a bar plot that shows top 20 used words. Create a bar plot showing the dataset's top 20 used words, remembering to flip the axes for better visualization

```{r}
# custom stop words
stop_num <- (1:20)
stop_num_words <- c("one", "two", "three", "four", "five",
                   "six", "seven", "eight", "nine", "ten",
                   "eleven", "twelve", "thirteen", "fourteen",
                   "fifteen" , "sixteen", "seventeen", "eighteen",
                   "nineteen", "twenty")

stop_num <- as.character(stop_num)

stop_numbers_list <- c(stop_num, stop_num_words)

stop_numbers <- tibble(word = stop_numbers_list)

# compute word counts again 
tokens %>%
  anti_join(stop_words) %>%
  anti_join(stop_numbers) %>%
  count(word) %>%
  arrange(desc(n)) 

# make bar plot

tokens %>%
  anti_join(stop_words) %>%
  anti_join(stop_numbers) %>%
  count(word) %>%
  arrange(desc(n)) %>%
  mutate(word2 = fct_reorder(word, n)) %>%
  slice(1:20) %>%
  ggplot(aes(x = word2, y = n)) +
  geom_col() +
  # Flip the plot coordinates
  coord_flip()

```

Let's perform sentiment analysis using 'nrc' sentiment dictionary. Append dictionary to the subset created in (e). Create a bar plot of the word counts colored by sentiment. Show only the top 10 words for each sentiment using facet wrap.

```{r}
# Append the dictionary to the subset created in part (e)
tokens_no_num <- tokens %>%
  anti_join(stop_words) %>%
  anti_join(stop_numbers) 

war_sentiment<- tokens_no_num %>%
  inner_join(get_sentiments("nrc"),
             relationship = "many-to-many")

# Create a bar plot of the word counts colored by sentiment. Show top 10 words
war_sentiment <- tokens_no_num %>%
  inner_join(get_sentiments("nrc"),
             relationship = "many-to-many") %>%
  count(word, sentiment) %>%
  group_by(sentiment) %>%
  slice_max(n, n =10) %>%
  ungroup() %>%
  mutate(word2 = fct_reorder(word, n))

# bar plot
ggplot(war_sentiment, aes(x = word2, y = n,
                        fill = sentiment)) +
  geom_col(show.legend = FALSE) +
  # Create a separate facet for each sentiment with free axes
  facet_wrap(~ sentiment, scales = "free") +
  coord_flip() +
  # Title the plot "Sentiment Word Counts" with "Words" for the x-axis
  labs(
    title = "Sentiment Word Counts",
    x = "Words"
  )
```

**What would you say about the sentiments displayed in this book?**

Sentiments are largely negative or antagonistic, which makes sense because these are excerpts from The Art of War. Positive sentiments that are included in the text are usually still related to war, such as "victory" or "advance."
